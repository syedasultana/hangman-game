{"ast":null,"code":"import _defineProperty from \"/Users/syedasultana/Desktop/FunProjects/hangman-game/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const initialState = {\n  randomWord: '',\n  incorrectLetters: []\n};\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_RANDOM_WORD\":\n      return _objectSpread({}, state, {\n        randomWord: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\nexport const setRandomWord = word => {\n  return {\n    type: \"SET_RANDOM_WORD\",\n    payload: word\n  };\n};\nexport const addIncorrectLetter = letter => {\n  return {\n    type: \"ADD_INCORRECT_LETTER\",\n    payload: letter\n  };\n};","map":{"version":3,"sources":["/Users/syedasultana/Desktop/FunProjects/hangman-game/src/redux.js"],"names":["initialState","randomWord","incorrectLetters","reducer","state","action","type","payload","setRandomWord","word","addIncorrectLetter","letter"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,UAAU,EAAE,EADc;AAE1BC,EAAAA,gBAAgB,EAAE;AAFQ,CAArB;AAKP,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,iBAAL;AACE,+BACKF,KADL;AAEEH,QAAAA,UAAU,EAAEI,MAAM,CAACE;AAFrB;;AAKF;AACI,aAAOH,KAAP;AARR;AAUD,CAXI;AAaP,OAAO,MAAMI,aAAa,GAAGC,IAAI,IAAI;AACnC,SAAO;AACLH,IAAAA,IAAI,EAAE,iBADD;AAELC,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,kBAAkB,GAAGC,MAAM,IAAI;AAC1C,SAAO;AACLL,IAAAA,IAAI,EAAE,sBADD;AAELC,IAAAA,OAAO,EAAEI;AAFJ,GAAP;AAID,CALM","sourcesContent":["export const initialState = {\n  randomWord: '',\n  incorrectLetters: []\n};\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"SET_RANDOM_WORD\":\n          return {\n            ...state,\n            randomWord: action.payload \n          };\n        \n        default:\n            return state;\n    }\n  };\n  \nexport const setRandomWord = word => {\n  return {\n    type: \"SET_RANDOM_WORD\",\n    payload: word\n  };\n};\n\nexport const addIncorrectLetter = letter => {\n  return {\n    type: \"ADD_INCORRECT_LETTER\",\n    payload: letter\n  };\n};\n\n\n"]},"metadata":{},"sourceType":"module"}