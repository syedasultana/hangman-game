{"ast":null,"code":"var _jsxFileName = \"/Users/syedasultana/Desktop/FunProjects/hangman-game/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { setPrompt, addToInputsList, initialState, reducer } from \"./redux\";\nconst store = createStore(reducer); //pass in chrome extension \n\nconst storeState = store.getState();\nconsole.log(storeState);\nconsole.log(storeState.counter); // store.dispatch({ type: \"ADD_TO_COUNTER\" });\n// console.log(store.getState().counter);\n// store.dispatch({ type: \"ADD_TO_COUNTER\" });\n// console.log(store.getState());\n// store.dispatch(addToCounter(3));\n// console.log(store.getState());\n\nfunction Root() {\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n}\n\nReactDOM.render(React.createElement(Root, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/syedasultana/Desktop/FunProjects/hangman-game/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","Provider","setPrompt","addToInputsList","initialState","reducer","store","storeState","getState","console","log","counter","Root","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,SAAT,EAAoBC,eAApB,EAAqCC,YAArC,EAAmDC,OAAnD,QAAkE,SAAlE;AAEA,MAAMC,KAAK,GAAGN,WAAW,CACrBK,OADqB,CAAzB,C,CAEG;;AACH,MAAME,UAAU,GAAGD,KAAK,CAACE,QAAN,EAAnB;AACAC,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACAE,OAAO,CAACC,GAAR,CAAYH,UAAU,CAACI,OAAvB,E,CACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,IAAT,GAAgB;AACZ,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKH;;AAEDT,QAAQ,CAACgB,MAAT,CAAgB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA0BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B,E,CAEA;AACA;AACA;;AACAhB,aAAa,CAACiB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { setPrompt, addToInputsList, initialState, reducer } from \"./redux\";\n\nconst store = createStore(\n    reducer\n); //pass in chrome extension \nconst storeState = store.getState();\nconsole.log(storeState);\nconsole.log(storeState.counter);\n// store.dispatch({ type: \"ADD_TO_COUNTER\" });\n// console.log(store.getState().counter);\n// store.dispatch({ type: \"ADD_TO_COUNTER\" });\n// console.log(store.getState());\n// store.dispatch(addToCounter(3));\n// console.log(store.getState());\n\nfunction Root() {\n    return (\n      <Provider store={store}>\n        <App />\n      </Provider>\n    );\n}\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}