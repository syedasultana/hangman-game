{"ast":null,"code":"import _defineProperty from \"/Users/syedasultana/Desktop/FunProjects/hangman-game/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const initialState = {\n  randomWord: '',\n  incorrectLetters: [],\n  incorrectCounter: 0,\n  gameWon: false,\n  gameOver: false,\n  gameStarting: true\n};\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_RANDOM_WORD\":\n      return _objectSpread({}, state, {\n        randomWord: action.payload\n      });\n\n    case \"ADD_INCORRECT_LETTER\":\n      return _objectSpread({}, state, {\n        incorrectLetters: [...state.incorrectLetters, action.payload]\n      });\n\n    case \"INCREMENT_INCORRECT_COUNTER\":\n      return _objectSpread({}, state, {\n        incorrectCounter: state.incorrectCounter + 1\n      });\n\n    case \"TOGGLE_GAME_WON\":\n      return _objectSpread({}, state, {\n        gameWon: action.payload\n      });\n\n    case \"TOGGLE_GAME_OVER\":\n      return _objectSpread({}, state, {\n        gameOver: action.payload\n      });\n\n    case \"TOGGLE_GAME_OVER\":\n      return _objectSpread({}, state, {\n        gameStarting: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\nexport const setRandomWord = word => {\n  return {\n    type: \"SET_RANDOM_WORD\",\n    payload: word\n  };\n};\nexport const addIncorrectLetter = letter => {\n  return {\n    type: \"ADD_INCORRECT_LETTER\",\n    payload: letter\n  };\n};\nexport const incrementIncorrectCounter = () => {\n  return {\n    type: \"INCREMENT_INCORRECT_COUNTER\"\n  };\n};\nexport const toggleGameWon = bool => {\n  return {\n    type: \"TOGGLE_GAME_WON\",\n    payload: bool\n  };\n};\nexport const toggleGameOver = bool => {\n  return {\n    type: \"TOGGLE_GAME_OVER\",\n    payload: bool\n  };\n};\nexport const toggleGameStarting = bool => {\n  return {\n    type: \"TOGGLE_GAME_STARTING\",\n    payload: bool\n  };\n};","map":{"version":3,"sources":["/Users/syedasultana/Desktop/FunProjects/hangman-game/src/redux.js"],"names":["initialState","randomWord","incorrectLetters","incorrectCounter","gameWon","gameOver","gameStarting","reducer","state","action","type","payload","setRandomWord","word","addIncorrectLetter","letter","incrementIncorrectCounter","toggleGameWon","bool","toggleGameOver","toggleGameStarting"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,UAAU,EAAE,EADc;AAE1BC,EAAAA,gBAAgB,EAAE,EAFQ;AAG1BC,EAAAA,gBAAgB,EAAE,CAHQ;AAI1BC,EAAAA,OAAO,EAAE,KAJiB;AAK1BC,EAAAA,QAAQ,EAAE,KALgB;AAM1BC,EAAAA,YAAY,EAAE;AANY,CAArB;AASP,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,iBAAL;AACE,+BACKF,KADL;AAEEP,QAAAA,UAAU,EAAEQ,MAAM,CAACE;AAFrB;;AAIF,SAAK,sBAAL;AACE,+BACKH,KADL;AAEEN,QAAAA,gBAAgB,EAAE,CAAC,GAAGM,KAAK,CAACN,gBAAV,EAA4BO,MAAM,CAACE,OAAnC;AAFpB;;AAIF,SAAK,6BAAL;AACE,+BACKH,KADL;AAEEL,QAAAA,gBAAgB,EAAEK,KAAK,CAACL,gBAAN,GAAyB;AAF7C;;AAIF,SAAK,iBAAL;AACE,+BACKK,KADL;AAEEJ,QAAAA,OAAO,EAAEK,MAAM,CAACE;AAFlB;;AAIF,SAAK,kBAAL;AACE,+BACKH,KADL;AAEEH,QAAAA,QAAQ,EAAEI,MAAM,CAACE;AAFnB;;AAIF,SAAK,kBAAL;AACE,+BACKH,KADL;AAEEF,QAAAA,YAAY,EAAEG,MAAM,CAACE;AAFvB;;AAIF;AACI,aAAOH,KAAP;AAhCR;AAkCD,CAnCI;AAqCP,OAAO,MAAMI,aAAa,GAAGC,IAAI,IAAI;AACnC,SAAO;AACLH,IAAAA,IAAI,EAAE,iBADD;AAELC,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,kBAAkB,GAAGC,MAAM,IAAI;AAC1C,SAAO;AACLL,IAAAA,IAAI,EAAE,sBADD;AAELC,IAAAA,OAAO,EAAEI;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,yBAAyB,GAAG,MAAM;AAC7C,SAAO;AACLN,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMO,aAAa,GAAGC,IAAI,IAAI;AACnC,SAAO;AACLR,IAAAA,IAAI,EAAE,iBADD;AAELC,IAAAA,OAAO,EAAEO;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,cAAc,GAAGD,IAAI,IAAI;AACpC,SAAO;AACLR,IAAAA,IAAI,EAAE,kBADD;AAELC,IAAAA,OAAO,EAAEO;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAME,kBAAkB,GAAGF,IAAI,IAAI;AACxC,SAAO;AACLR,IAAAA,IAAI,EAAE,sBADD;AAELC,IAAAA,OAAO,EAAEO;AAFJ,GAAP;AAID,CALM","sourcesContent":["export const initialState = {\n  randomWord: '',\n  incorrectLetters: [],\n  incorrectCounter: 0,\n  gameWon: false,\n  gameOver: false,\n  gameStarting: true\n};\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"SET_RANDOM_WORD\":\n          return {\n            ...state,\n            randomWord: action.payload \n          };\n        case \"ADD_INCORRECT_LETTER\":\n          return {\n            ...state,\n            incorrectLetters: [...state.incorrectLetters, action.payload]\n          };\n        case \"INCREMENT_INCORRECT_COUNTER\":\n          return {\n            ...state,\n            incorrectCounter: state.incorrectCounter + 1\n        }\n        case \"TOGGLE_GAME_WON\":\n          return {\n            ...state,\n            gameWon: action.payload\n        }\n        case \"TOGGLE_GAME_OVER\":\n          return {\n            ...state,\n            gameOver: action.payload\n        }\n        case \"TOGGLE_GAME_OVER\":\n          return {\n            ...state,\n            gameStarting: action.payload\n        }\n        default:\n            return state;\n    }\n  };\n  \nexport const setRandomWord = word => {\n  return {\n    type: \"SET_RANDOM_WORD\",\n    payload: word\n  };\n};\n\nexport const addIncorrectLetter = letter => {\n  return {\n    type: \"ADD_INCORRECT_LETTER\",\n    payload: letter\n  };\n};\n\nexport const incrementIncorrectCounter = () => {\n  return {\n    type: \"INCREMENT_INCORRECT_COUNTER\"\n  };\n};\n\nexport const toggleGameWon = bool => {\n  return {\n    type: \"TOGGLE_GAME_WON\",\n    payload: bool\n  };\n};\n\nexport const toggleGameOver = bool => {\n  return {\n    type: \"TOGGLE_GAME_OVER\",\n    payload: bool\n  };\n};\n\nexport const toggleGameStarting = bool => {\n  return {\n    type: \"TOGGLE_GAME_STARTING\",\n    payload: bool\n  };\n};\n\n\n"]},"metadata":{},"sourceType":"module"}