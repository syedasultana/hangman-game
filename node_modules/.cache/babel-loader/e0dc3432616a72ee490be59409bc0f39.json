{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { isClient } from './util';\n\nvar useLocalStorage = function (key, initialValue, raw) {\n  if (!isClient) {\n    return [initialValue, function () {}];\n  }\n\n  var _a = useState(function () {\n    try {\n      var localStorageValue = localStorage.getItem(key);\n\n      if (typeof localStorageValue !== 'string') {\n        localStorage.setItem(key, raw ? String(initialValue) : JSON.stringify(initialValue));\n        return initialValue;\n      } else {\n        return raw ? localStorageValue : JSON.parse(localStorageValue || 'null');\n      }\n    } catch (_a) {\n      // If user is in private mode or has storage restriction\n      // localStorage can throw. JSON.parse and JSON.stringify\n      // can throw, too.\n      return initialValue;\n    }\n  }),\n      state = _a[0],\n      setState = _a[1];\n\n  useEffect(function () {\n    try {\n      var serializedState = raw ? String(state) : JSON.stringify(state);\n      localStorage.setItem(key, serializedState);\n    } catch (_a) {// If user is in private mode or has storage restriction\n      // localStorage can throw. Also JSON.stringify can throw.\n    }\n  }, [state]);\n  return [state, setState];\n};\n\nexport default useLocalStorage;","map":null,"metadata":{},"sourceType":"module"}